coriden@Mytop:~$ code.
Command 'code.' not found, did you mean:
  command 'code' from snap code (dc96b837)
See 'snap info <snapname>' for additional versions.
coriden@Mytop:~$ code .
To use Visual Studio Code with the Windows Subsystem for Linux, please install Visual Studio Code in Windows and uninstall the Linux version in WSL. You can then use the `code` command in a WSL terminal just as you would in a normal command prompt.
Do you want to continue anyway? [y/N] y
To no longer see this prompt, start Visual Studio Code with the environment variable DONT_PROMPT_WSL_INSTALL defined.
coriden@Mytop:~$ code .
To use Visual Studio Code with the Windows Subsystem for Linux, please install Visual Studio Code in Windows and uninstall the Linux version in WSL. You can then use the `code` command in a WSL terminal just as you would in a normal command prompt.
Do you want to continue anyway? [y/N] y
To no longer see this prompt, start Visual Studio Code with the environment variable DONT_PROMPT_WSL_INSTALL defined.
coriden@Mytop:~$ mkdir git-lab
mkdir: cannot create directory ‘git-lab’: File exists
coriden@Mytop:~$ git --version
git version 2.34.1
coriden@Mytop:~$ git config --global user.name "Coriden"
coriden@Mytop:~$ git config --global user.email "cc608623"
coriden@Mytop:~$ git config --list
user.name=Coriden
user.email=cc608623
coriden@Mytop:~$ git config --global user.email "cc608623@ohio.edu"
coriden@Mytop:~$ ^C
coriden@Mytop:~$ git config --list
user.name=Coriden
user.email=cc608623@ohio.edu
coriden@Mytop:~$ git <command> --help
-bash: command: No such file or directory
coriden@Mytop:~$ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
coriden@Mytop:~$ cd git-lab
coriden@Mytop:~/git-lab$ ls -a
.  ..  README.md  answers.md
coriden@Mytop:~/git-lab$ git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint:   git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint:   git branch -m <name>
Initialized empty Git repository in /home/coriden/git-lab/.git/
coriden@Mytop:~/git-lab$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        CoridencainCoriden.md
        answers.md

nothing added to commit but untracked files present (use "git add" to track)
coriden@Mytop:~/git-lab$ git add README.md
fatal: pathspec 'README.md' did not match any files
coriden@Mytop:~/git-lab$ git add CoridencainCoriden.md
coriden@Mytop:~/git-lab$ git add answers.md
coriden@Mytop:~/git-lab$ answers.md
answers.md: command not found
coriden@Mytop:~/git-lab$ git commit -m "Initial commit"
[master (root-commit) 00240b1] Initial commit
 2 files changed, 2 insertions(+)
 create mode 100644 CoridencainCoriden.md
 create mode 100644 answers.md
coriden@Mytop:~/git-lab$ git commit -m "Initial commit"
On branch master
nothing to commit, working tree clean
coriden@Mytop:~/git-lab$ git log
commit 00240b1670e62579c67ac93e47757b2b5c56423a (HEAD -> master)
Author: Coriden <cc608623@ohio.edu>
Date:   Thu May 16 20:37:20 2024 -0400

    Initial commit
coriden@Mytop:~/git-lab$ git remote add origin https://github.com/Coriden/git-lab.git
coriden@Mytop:~/git-lab$ git branch -M main
coriden@Mytop:~/git-lab$ git push -u origin main
Username for 'https://github.com': Coriden
Password for 'https://Coriden@github.com':
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/Coriden/git-lab.git/'
coriden@Mytop:~/git-lab$ git add README.md
fatal: pathspec 'README.md' did not match any files
coriden@Mytop:~/git-lab$ git add README.md
git commit -m "Enter a message here"
git push
fatal: pathspec 'README.md' did not match any files
On branch main
nothing to commit, working tree clean
fatal: The current branch main has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin main

coriden@Mytop:~/git-lab$ echo "# git-lab" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Coriden/git-lab.git
git push -u origin main


CS 2400, Section 100
